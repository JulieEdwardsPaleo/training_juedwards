---
title: "R Practice: Functions"
format: html
execute:
  message: false
  warning: false
---

```{r}
# create function #
double_it <- function(x) {
    return(2 * x)
}

# try it out #
# explicit notation
double_it(x = 24)

# non explicit notation
a<-double_it(24)


# write function #
exclaim_age <- function(age) {
  return(paste("I am", age, "years old!"))
}

# try it out #
# explicit notation
exclaim_age(age = 12)

# non explicit notation
exclaim_age(a)
```


```{r}
# "find_max() function" #
find_max <- function(value_1, value_2) {
    
    if (value_1 > value_2) {
        return(value_1)
    }
    else if (value_2 > value_1) {
        return(value_2)
    }
}


find_max(2,6)
```



```{r}
# `find_max()` function with error message
find_max <- function(value_1, value_2) {
    
    if (value_1 == value_2) {
        stop("Values must be different from each other.")
    }
    
    if (value_1 > value_2) {
        return(value_1)
    }
    else if (value_2 > value_1) {
        return(value_2)
    }
}

# try it out #
# does the message appear as you expected?
find_max(4, 4)
```


```{r}
# `find_max()` function with error messages and checks
find_max <- function(value_1, value_2) {
    
    # `|` is the logical OR operator
    # `!=` is the not-equal-to operator
    if (is.numeric(value_1) != TRUE | is.numeric(value_2) != TRUE) {
        # alt expression: is.numeric(value_1) == FALSE | is.numeric(value_2) == FALSE
        stop("Value must be a numeric type.")
    }
    
    if (value_1 == value_2) {
        stop("Values must be different from each other.")
    }
    
    if (value_1 > value_2) {
        return(value_1)
    }
    else if (value_2 > value_1) {
        return(value_2)
    }
}

# try it out #
# does the message appear as you expected?
find_max(4, "cow")
find_max("cow", 4)
```


```{r}
# `find_max()` function with error messages and checks
find_max <- function(value_1, value_2, equal_ok = FALSE) {
    
    # `|` is the logical OR operator
    # `!=` is the not-equal-to operator
    if (is.numeric(value_1) != TRUE | is.numeric(value_2) != TRUE) {
        # alt expression: is.numeric(value_1) == FALSE | is.numeric(value_2) == FALSE
        stop("Value must be a numeric type.")
    }
    
    if (value_1 == value_2) {
        ### the values are equal; is value of the equal_ok argument TRUE?
        if(equal_ok) return(value_1)
        ### if equal_ok is not TRUE, then report an error
        stop("Values must be different from each other.")
    }
    
    if (value_1 > value_2) {
        return(value_1)
    }
    else if (value_2 > value_1) {
        return(value_2)
    }
}

# try it out #
# does the message appear as you expected?
find_max(4, 4)
find_max(4, 4, equal_ok = TRUE)
```













