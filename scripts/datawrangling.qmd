---
title: "data wrangling"
format: html
editor: visual

---


## import libraries  and download data
```{r}
#| message: false
#| warning: false

library(dplyr)
library(tidyr)
library(readr)


```

# Data Sources
## Read in the data 
```{r}

catch_original <- read.csv(url("https://knb.ecoinformatics.org/knb/d1/mn/v2/object/df35b.302.1", method = "libcurl"))


```
## Explore data
```{r}
#| eval: false
## Prints the column names of my data frame
colnames(catch_original)

## First 6 lines of the data frame
head(catch_original)

## Summary of each column of data
summary(catch_original)

## Prints unique values in a column (in this case, the region)
unique(catch_original$Region)

## Opens data frame in its own tab to see each row and column of the data (do in console)
View(catch_original)
```


# Clean and Reshape data

## Using select() function
```{r}
catch_data <- catch_original %>%
    select(Region, Year, Chinook, Sockeye, Coho, Pink, Chum)

head(catch_data)
```
```{r}
catch_data <- catch_original %>%
    select(-All,-notesRegCode)
```

## Check column types

```{r}
dplyr::glimpse(catch_data)
```

0's are being seen as a string not a number!

## Replace values in a column with mutate()

Change it to be a numeric!
```{r}
catch_clean <- catch_data %>%
    mutate(Chinook = as.numeric(Chinook))

```
 uh oh NaNs
 
```{r}
i <- which(is.na(catch_clean$Chinook))
catch_data[i,]
```
 
 1 was being read as an I from the original data
 
```{r}
#| eval: false
catch_clean <- catch_data %>%
    mutate(Chinook = if_else(condition = Chinook == "I", 
                             true = "1", 
                             false = Chinook),
           Chinook = as.numeric(Chinook))

##check
catch_clean[i, ]
```
 


## Reshape data with pivot_longer() and pivot_wider()
```{r}
catch_long <- catch_clean %>% 
    #pivot longer all columns except Region and Year
    pivot_longer(
        cols = -c(Region, Year),
        names_to = "species",
        values_to = "catch"
    )

head(catch_long)
```

```{r}
catch_wide <- catch_long %>%
    pivot_wider(names_from = species,
                values_from = catch)

head(catch_wide)
```


## Rename columns rename()
```{r}
catch_long <- catch_long %>%
    rename(catch_thousands = catch)

head(catch_long)
```

## Add columns with mutate()


```{r}
catch_long <- catch_long %>%
    mutate(catch = catch_thousands * 1000) %>%
    select(-catch_thousands)

head(catch_long)


```

## Summary stats using group_by() and summarize()
```{r}
unique(catch_original$Region)
```
```{r}
mean_region <- catch_long %>%
    group_by(Region) %>%
    summarize(mean_catch = mean(catch))

head(mean_region)
```
```{r}
 n_region <- catch_long %>%
    group_by(Region) %>%
    summarize(n = n())

head(n_region)
```

## Filtering rows using filter()
```{r}
sse_catch <- catch_long %>%
    filter(Region == "SSE")

head(sse_catch)
```

## Sort data using arrange()
```{r}
mean_region <- catch_long %>%
    group_by(Region) %>%
    summarize(mean_catch = mean(catch)) %>%
    arrange(mean_catch)

head(mean_region)
```
Regions sorted by catch 
 
## Split and combine values in columns with separate() and unite()












